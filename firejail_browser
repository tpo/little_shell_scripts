#!/bin/bash

help() {
   echo 'usage: firejail_browser'
   echo '       firejail_browser --help'
   echo
   echo '    This script lists you the running firejails,'
   echo '    lets you select one from the menu and lets you'
   echo '    execute an action on that firejail:'
   echo '      * get one or multiple files from that jail: will option a'
   echo '        file selection dialogue inside the jail'
   echo '        * use cursor and tab keys to navigate'
   echo '        * press Space to select a file or a directory'
   echo '        * press Enter to get file or change into directory'
   echo '        * press CTRL-C to abort'
   echo '      * put a file into the jail (currently not'
   echo '        implemented)'
   echo '      * open a shell in the jail'
   echo
   echo '    Put and get require you to have the'
   echo '    https://github.com/tpo/little_shell_scripts/blob/master/file_chooser'
   echo '    script installed in a standard binary path.'
   echo
   echo '    ATTENTION: when getting files from a jail we will at least partly'
   echo '               circumven the file name sanitacion that firejail is'
   echo '               trying to enforce'
   echo
   exit 1
}

[ "$1" == "--help" ] && help

set -e          # stop on error
set -u          # stop on undefined variable
set -o pipefail # stop part of pipeline failing

# firejail will refuse to get files with real names.
#
# Therefore we:
# * first sanitize the file name
# * copy the file to a sanely named file
# * return the sanitized file name
#
sanitize_file() {
  local file_path="$1"
  local sane_file_path

  sane_file_path="$( echo "$file_path" | sed 's/,/_/g' )"

  if [ "$file_path" != "$sane_file_path" ]; then
    firejail --join=$jail bash -c "cp \"$file_path\" \"$sane_file_path\""
    # debug:
    # echo "sanitized (moved/renamed) \"$file_path\" -> \"$sane_file_path\"" >&2
  fi

  # return sanitized path
  echo "$sane_file_path"
}

get() {
  local file_path="$( firejail --join=$jail bash -c 'cd Downloads; file_chooser' )"

  # firejail will refuse to get files with real names.
  #
  # Therefore we:
  # * inside `sanitize_file`
  #   * first sanitize the file name
  #   * rename the file to a sanely named file
  # * get the sanitized file
  # * rename it to the name it had before
  #
  file_name="$( basename "$file_path" )"
  sane_file_path="$( sanitize_file "$file_path" )"
  sane_file_name="$( basename "$sane_file_path" )"
  firejail --get=$jail "$sane_file_path"
  if [ "$file_name" != "$sane_file_name" ]; then
    mv "$sane_file_name" "$file_name"
  fi
}

readarray -t jails < <( firejail --list )

echo "Please select the appropriate device:"
select jail_line in "${jails[@]}" Quit; do
    break
done

[ "$jail_line" == "Quit" ] && exit 0

jail=$( echo "$jail_line" | sed 's/:.*//' )

select action in get multi_get put exec; do
    break
done

case "$action" in
  get)
    get
    ;;
  multi_get)
    while true; do
      get
      echo "Press Enter to get next file or CTRL-C to abort"
      read
    done
    ;;
  put)
    src="$( file_chooser )"
    filename="$( basename "$src" )"
    dest="/tmp/$filename"
    if firejail --put=$jail "$src" "$dest"; then
      echo "'$src' was copied to '$dest'"
    else
      echo "There was some error"
    fi
    ;;
  exec)
    firejail --join=$jail
    ;;
  *)
    echo "not implemented"
esac
